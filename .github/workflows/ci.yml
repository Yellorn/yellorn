name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # Backend testing and validation
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: yellorn_test
          POSTGRES_USER: yellorn
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install Python dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          
      - name: Run backend linting
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .
          
      - name: Run backend type checking
        run: |
          cd backend
          mypy . --ignore-missing-imports
          
      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://yellorn:test_password@localhost:5432/yellorn_test
          SECRET_KEY: test-secret-key
        run: |
          cd backend
          pytest --cov=app --cov-report=xml
          
      - name: Upload backend coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend

  # Plot validation for AI agents
  plot-validation:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install validation dependencies
        run: |
          pip install jsonschema
          
      - name: Validate plot schemas
        run: |
          python scripts/validate_plots.py
          
      - name: Check for security issues in plots
        run: |
          python scripts/security_scan.py

  # Docker build validation
  docker-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: yellorn-backend:test

  # Integration tests
  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests]
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Start backend service
        run: |
          cd backend
          pip install -r requirements.txt
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 10  # Wait for backend to start
          
      - name: Run backend integration tests
        run: |
          curl -f http://localhost:8000/health
          
      - name: Run API integration tests
        run: |
          python scripts/integration_tests.py
          
      - name: Stop backend service
        run: |
          pkill -f uvicorn
